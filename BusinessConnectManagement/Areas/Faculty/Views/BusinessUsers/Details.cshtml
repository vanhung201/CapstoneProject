@model BusinessConnectManagement.Models.BusinessUser

@{
    ViewBag.Title = "Business Details";
    Layout = "~/Areas/Faculty/Views/Shared/_Layout.cshtml";
}



<section class="list">
    <form id="createBusiness" action="@Url.Action("Details","BusinessUsers", new {id = Model.ID})" method="post" enctype="multipart/form-data">
        <h1 class="list-heading">Chỉnh Sửa Doanh Nghiệp</h1>
        <div class="grid wide">
            <div class="tab-content">
                <div class="row">
                    @Html.HiddenFor(model => model.ID)
                    <div class="col l-6">
                        <div class="form-group">
                            <label class="form-label">Mã Doanh Nghiệp</label>
                            @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-input", disabled = "true" } })
                        </div>
                    </div>

                    <div class="col l-6">
                        <div class="form-group">
                            <label class="form-label">Tên Doanh Nghiệp</label>
                            @Html.EditorFor(model => model.BusinessName, new { htmlAttributes = new { @class = "form-input" } })
                        </div>
                        <div class="form-group">
                            <label class="form-label" hidden></label>
                            @Html.ValidationMessageFor(model => model.BusinessName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col l-6">
                        <div class="form-group">
                            <label for="stat" class="form-label">Trạng Thái</label>
                            <select name="Status_ID" id="" class="form-input">
                                @foreach (var item in ViewBag.StatusList)
                                {
                                    if (item.ID == Model.Status_ID)
                                    {
                                        <option value=@Model.Status_ID selected>@Model.Status.Status1</option>
                                    }
                                    else
                                    {
                                        <option value=@item.ID>@item.Status1</option>
                                    }
                                }

                            </select>
                        </div>
                    </div>
                    <div class="col l-6">
                        <div class="form-group">
                            <label class="form-label">Tên Đăng Nhập</label>
                            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-input" } })
                        </div>
                        <div class="form-group">
                            <label class="form-label" hidden></label>
                            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col l-6">
                        <div class="form-group">
                            <label class="form-label">Mật Khẩu</label>
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-input" } })
                        </div>
                        <div class="form-group">
                            <label class="form-label" hidden></label>
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>

                    </div>

                    <div class="col l-6">
                        <div class="form-group">
                            <label for="lastAccess" class="form-label">Lần truy cập cuối</label>
                            <input name="Last_Access" class="form-input" value="@Model.Last_Access"
                                   autocomplete="off" disabled />
                            @Html.HiddenFor(model => model.Last_Access)
                        </div>
                    </div>
                    <div class="col l-6">
                        <div class="form-group">
                            <label class="form-label">Địa Chỉ</label>
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-input" } })
                        </div>
                        <div class="form-group">
                            <label class="form-label" hidden></label>
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col l-6">
                        <div class="form-group">
                            <label class="form-label">Số điện thoại</label>
                            @Html.EditorFor(model => model.BusinessPhone, new { htmlAttributes = new { @class = "form-input" } })
                        </div>
                        <div class="form-group">
                            <label class="form-label" hidden></label>
                            @Html.ValidationMessageFor(model => model.BusinessPhone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col l-6">
                        <div class="form-group">
                            <label class="form-label">Website</label>
                            @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-input" } })
                        </div>
                        <div class="form-group">
                            <label class="form-label" hidden></label>
                            @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col l-6">
                        <div class="form-group">
                            <label class="form-label">Fanpage</label>
                            @Html.EditorFor(model => model.Fanpage, new { htmlAttributes = new { @class = "form-input" } })
                        </div>
                        <div class="form-group">
                            <label class="form-label" hidden></label>
                            @Html.ValidationMessageFor(model => model.Fanpage, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col l-6">
                        <div class="form-group">
                            <label class="form-label">Người Liên Hệ</label>
                            @Html.EditorFor(model => model.ContactName, new { htmlAttributes = new { @class = "form-input" } })
                        </div>
                        <div class="form-group">
                            <label class="form-label" hidden></label>
                            @Html.ValidationMessageFor(model => model.ContactName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col l-6">
                        <div class="form-group">
                            <label class="form-label">SĐT Người Liên Hệ </label>
                            @Html.EditorFor(model => model.ContactPhone_1, new { htmlAttributes = new { @class = "form-input" } })
                        </div>
                        <div class="form-group">
                            <label class="form-label" hidden></label>
                            @Html.ValidationMessageFor(model => model.ContactPhone_1, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col l-6">
                        <div class="form-group">
                            <label class="form-label">SĐT Người Liên Hệ </label>
                            @Html.EditorFor(model => model.ContactPhone_2, new { htmlAttributes = new { @class = "form-input" } })
                        </div>
                        <div class="form-group">
                            <label class="form-label" hidden></label>
                            @Html.ValidationMessageFor(model => model.ContactPhone_2, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col l-6">
                        <div class="form-group">
                            <label class="form-label">Email Người Liên Hệ</label>
                            @Html.EditorFor(model => model.EmailContact, new { htmlAttributes = new { @class = "form-input" } })
                        </div>
                        <div class="form-group">
                            <label class="form-label" hidden></label>
                            @Html.ValidationMessageFor(model => model.EmailContact, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    
                    <div class="col l-6">
                        <div class="form-group">
                            <input id="CoopId" type="text" value="" name="ArrCoopId" hidden />
                            <label for="cooperation" class="form-label">Loại Hợp Tác</label>
                            <div class="checkbox-wrapper" id="checkBoxCoop">
                                @foreach (var item in ViewBag.CooperationCategoriesDetail)
                                {
                                    <label class="container">
                                        @item.name
                                        @if (item.status)
                                        {
                                            <input type="checkbox" value="@item.value" checked="checked">
                                            <span class="checkmark"></span>
                                        }
                                        else
                                        {
                                            <input type="checkbox" value="@item.value">
                                            <span class="checkmark"></span>
                                        }
                                    </label>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="col l-6">
                        <div class="form-group">
                            <label for="logo" class="form-label">Logo</label>
                            <div style="display: flex; flex-direction: column">
                                <img src="@Url.Content("~/Image/"+ Model.BusinessLogo)" style="width: 22rem; height:fit-content; margin: 0 0 1rem 0;" />
                                <input name="logo" class="form-input" onchange="validateSize(this)" type="file" id="logo"
                                       accept="image/png, image/gif, image/jpeg" />
                                <input name="BusinessLogo" id="img" value="@Model.BusinessLogo" hidden />
                            </div>
                        </div>
                    </div>
                </div>
                </div>
            <div class="button-wrapper">
                <a class="btn btn--back" href="@Url.Action("Index", "BusinessUsers")">Trở Về</a>
                @* <button class="btn btn-action btn--create" onclick="getValueCheckBoxAndSubmit()">Thêm</button>*@
                <button class="btn btn--update" type="submit" onclick="checkImage()" >Cập Nhật</button>
            </div>
        </div>
    </form>
</section>

@section Scripts {
    <script type="text/javascript">
        function validateSize(input) {
            var fup = document.getElementById('logo');
            var fileName = fup.value;
            var ext = fileName.substring(fileName.lastIndexOf('.') + 1);
            if (fileName == '' || ext == "gif" || ext == "GIF" || ext == "PNG" || ext == "png" || ext == "jpg" || ext == "JPG" || ext == "bmp" || ext == "BMP") {
                const fileSize = input.files[0].size / 1024 / 1024; // in MiB
                var fup = document.getElementById('logo');
                if (fileSize < 2) {
                    $("#logo").prop('required', false);
                    return true;
                } else {
                    // Proceed further
                    alert('Dung lượng hình ảnh không vượt quá 2MiB');
                    fup.value = '';
                    return false;
                }
                return true;
            }
            else {
                fup.value = '';
                alert("Chỉ được tải lên hình ảnh dạng PNG, JPG, GIF và BMP");

                return false;
            }
        }

        function checkImage() {
            //Get list cooperationcategories
            let arrayCheckbox = "";
            var allCheckBox = document.querySelectorAll("#checkBoxCoop > .container > input[type='checkbox']:checked");
            for (let i = 0; i < allCheckBox.length; i++) {
                arrayCheckbox += allCheckBox[i].value + ",";
            }
            $("#CoopId").val(arrayCheckbox);
            $("#createBusiness");
            //Validate only get image
        }

       
    </script>

}