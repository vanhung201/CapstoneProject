@using BusinessConnectManagement.Models;

@{
    BCMEntities db = new BCMEntities();

    int studentNumber = db.VanLangUsers.Count(x => x.Role == "Student");
    int facultyNumber = db.VanLangUsers.Count(x => x.Role == "Faculty");
    int mentorNumber = db.VanLangUsers.Count(x => x.Role == "Mentor");
    int businessNumber = db.BusinessUsers.Count();
    int userActiveNumber = db.VanLangUsers.Count(x => x.Status_ID == 1);
    int userBlockedNumber = db.VanLangUsers.Count(x => x.Status_ID == 2);

    var bu = db.BusinessUsers.Select(x => x.BusinessName).ToArray();
    var buID = db.BusinessUsers.Select(x => x.ID).ToArray();
    var passedStudent = buID.Select(buId => db.Registrations.Count(x => x.Business_ID == buId && x.StatusInternview == "Đậu Phỏng Vấn")).ToArray();
    var years = db.YearStudies.ToList();
    var curSemester = db.Semesters.Where(x => x.Status == true).Select(x => x.ID).ToList();
    var buSignedMOU = db.MOUs.Count();
    //for (int i = 0; i < buID.Length; i++)
    //{
    //    int num = db.Registrations.Count(x => x.Business_ID == buID[i] && x.StatusInternview == "Đậu");
    //    passedStudent[i] = num;
    //}
}

@{
    ViewBag.Title = "Trang quản lý - BCM";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<section id="statistic">
    <div class="filter">
        <div class="filter-item">
            <label for="year" class="filter-label">Lọc năm học</label>
            <select name="" id="year" class="filter-select">
                @foreach (var item in years)
                {
                    <option value="@item.ID">@item.YearStudy1</option>
                }
            </select>
        </div>
        <div class="filter-item">
            <label for="semester" class="filter-label">Lọc học kỳ</label>
            <select name="" id="semester" class="filter-select">
            </select>
        </div>
    </div>

    <div class="statistic-user">
        <div class="user">
            <h4 class="heading">Thống kê Số lượng người dùng</h4>
            <ul class="user-list">
                <li class="user-item user-error">
                    <p class="user-item-desc">
                        Khoa CNTT:
                        <span>@facultyNumber</span>
                    </p>
                </li>
                <li class="user-item user-warning">
                    <p class="user-item-desc">
                        Giảng Viên Hướng Dẫn:
                        <span id="mentor">@mentorNumber</span>
                    </p>
                </li>
                <li class="user-item user-info">
                    <p class="user-item-desc">
                        Sinh Viên:
                        <span id="student">@studentNumber</span>
                    </p>
                </li>
            </ul>
        </div>
        <div class="user">
            <h4 class="heading">Thống kê trạng thái người dùng</h4>
            <ul class="user-list">
                <li class="user-item user-active">
                    <p class="user-item-desc">
                        Đang hoạt động:
                        <span>@userActiveNumber</span>
                    </p>
                </li>
                <li class="user-item user-block">
                    <p class="user-item-desc">
                        Bị khóa:
                        <span id="mentor">@userBlockedNumber</span>
                    </p>
                </li>
            </ul>
        </div>
    </div>

    <div class="statistic-job">
        <div class="cv">
            <h4 class="heading">Thống kê CV xin việc</h4>
            <div class="chart">
                <div class="chart-item" style="width:100%">
                    <div>
                        <span id="cv_empty"></span>
                    </div>
                    <canvas id="CV-count" width="400" height="400" style="margin:auto"></canvas>
                </div>
            </div>
        </div>

        <div class="interview">
            <h4 class="heading">Thống kê SV phỏng vấn</h4>
            <div class="chart">
                <div class="chart-item" style="width:100%">
                    <div>
                        <span id="sv_empty"></span>
                    </div>
                    <canvas id="student-pie" width="400" height="400" style="margin:auto"></canvas>
                </div>
            </div>
        </div>
    </div>

    <div class="intern">
        <h4 class="heading">Thống kê Số Lượng Sinh Viên Đậu Phỏng Vấn</h4>
        <div class="chart">
            <div class="chart-item" style="width:100%">
                <canvas id="pie-chart3" width="900" height="400" style="margin:auto"></canvas>
            </div>
        </div>
    </div>

    <div class="statistic-business">
        <h4 class="heading">Thống kê Doanh nghiệp</h4>
        <ul class="business-list">
            <li class="business-item business-success">
                <p class="business-item-desc">
                    Doanh Nghiệp:
                    <span id="business">0</span>
                </p>
            </li>
            <li class="business-item business-error">
                <p class="business-item-desc">
                    DN Đã Ký Kết MOU:
                    <span id="">@buSignedMOU</span>
                </p>
            </li>
        </ul>
        <div class="business-sign">
            <div class="chart">
                <div class="chart-item" style="width:100%">
                    <div class="chart-wrap">
                        <label for="select-business" class="chart-label">Lọc doanh nghiệp:</label>
                        <select name="" id="select-business" class="chart-select">
                        </select>
                    </div>
                    <div>
                        <span id="bussiness_empty"></span>
                    </div>
                    <canvas id="chart-business" width="900" height="400" style="margin:auto"></canvas>
                </div>
            </div>
        </div>
    </div>

</section>

<script>
    // Chart Business
    var business = document.getElementById("chart-business").getContext("2d");
    var myBusiness = new Chart(business, {
        type: "bar",
        data: {
            labels: [

            ],
            datasets: [
                {
                    label: "Vị trí doanh nghiệp cung cấp",
                    data: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                    backgroundColor: [
                        "#B8B8F3",
                        "#7F2B72",
                        "#FA8072",
                        "#00BFFF",
                        "#F4A460",
                        "#8FBC8F",
                        "#A0522D",
                        "#4682B4",
                        "#FFD700",
                        "#4B0082",
                        "#6B8E23",
                        "#D8BFD8",
                        "#FFA07A",
                        "#1E90FF",
                        "#BC8F8F",
                        "#8B0000",
                        "#F5DEB3",
                    ],
                    borderColor: [
                        "#B8B8F3",
                        "#7F2B72",
                        "#FA8072",
                        "#00BFFF",
                        "#F4A460",
                        "#8FBC8F",
                        "#A0522D",
                        "#4682B4",
                        "#FFD700",
                        "#4B0082",
                        "#6B8E23",
                        "#D8BFD8",
                        "#FFA07A",
                        "#1E90FF",
                        "#BC8F8F",
                        "#8B0000",
                        "#F5DEB3",
                    ],
                    borderWidth: 1,
                },
            ],
        },
        options: {
            indexAxis: 'y',
            responsive: false,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    display: true,
                    position: 'bottom',
                    labels: {
                        color: 'black' // set the font color to white
                    }
                }
            }
        }
    });

    // Chart Interview
    
</script>


@section Scripts {
    <script>

        var studentPie=
        new Chart(document.getElementById("student-pie"), {
            type: "bar",
            data: {
                labels: ["SV Đậu Phỏng Vấn", "SV Rớt Phỏng Vấn", "SV Đang Thực Tập", "SV Chờ Xác Nhận", "SV Thực Tập Xong"],
                datasets: [
                    {
                        label: `Số lượng`,
                        backgroundColor: ["#51a351", "#bd362f", "#2f96b4", "#f89406", "#5d26c1"],
                        data: [],
                    },
                ],
            },
            options: {
                indexAxis: 'y',
                title: {
                    display: true,
                    text: "Pie Chart for role panel",
                },
                reponsive: true,
                plugins: {
                    legend: {
                        display: true,
                        position: 'bottom',
                        labels: {
                            color: 'white' // set the font color to white
                        }
                    }
                }
            },
        });
        //CV chart
         var chart2=
             new Chart(document.getElementById("CV-count"), {
            type: "bar",
            data: {
                labels: ["CV Chờ Duyệt", "CV Phê Duyệt", "CV Hủy Duyệt","CV Không Duyệt"],
                datasets: [
                    {
                        label: `Số lượng`,
                        backgroundColor: ["#f89406", "#51a351", "#bd362f","#5d26c1"],
                        data: [],
                    },
                ],
            },
            options: {
                indexAxis: 'y',
                title: {
                    display: true,
                    text: "Pie Chart for role panel",
                },
                reponsive: true,
                plugins: {
                    legend: {
                        display: true,
                        position: 'bottom',
                        labels: {
                            color: 'white' // set the font color to white
                        }
                    }
                }
            },
        });


        var passedChart =
            new Chart(document.getElementById("pie-chart3"), {
            type: "bar",
            data: {
                labels: [],
                datasets: [
                    {
                        label: `Số lượng`,
                        backgroundColor: ["#38663c", "#e21c34"],
                        data: @Html.Raw(Json.Encode(passedStudent)),
                    },
                ],
            },
                options: {
                    indexAxis: 'y',
                title: {
                    display: true,
                    text: "Pie Chart for status panel",
                },
                plugins: {
                    legend: {
                        display: true,
                        position: 'bottom',
                        labels: {
                            color: 'white' // set the font color to white
                        }
                    }
                },
                reponsive: true,
                tooltips: {
                    callbacks: {
                        title: function (tooltipItems, data) {
                            return data.labels[tooltipItems[0].index]
                        }
                    }
                },
                scales: {
                    x: {
                        ticks: {
                            callback: function (value) {
                                return this.getLabelForValue(value).substr(0, 4);
                            }
                        }
                    },
                    y: {
                        beginAtZero: true
                    }
                }
            },
        });
    </script>

    <script>
    var businessSelect = $('#select-business');
       $(document).ready(function () {
    var yearSelect = $('#year');
    var semesterSelect = $('#semester');

    yearSelect.on('change', function () {
        var selectedYearId = yearSelect.val();
        var selectedSemesterId = semesterSelect.val();
        var url = '@Url.Action("BindingSemester", "AdminHome")' + '?selectedYearId=' + selectedYearId + '&selectedSemesterId=' + selectedSemesterId;
        $.ajax({
            url: url,
            type: 'GET',
            dataType: 'json',
            success: function (res) {
                console.log(res);
                semesterSelect.empty();
                $.each(res, function (index, semester) {
                    var selectedAttr = semester.Status ? 'selected' : '';
                    semesterSelect.append('<option value="' + semester.ID + '" ' + selectedAttr + '>' + semester.Semester + '</option>');
                });
                semesterSelect.trigger('change'); // trigger the change event on semesterSelect
            },
        });
        businessSelect.trigger('change');
    });

    semesterSelect.on('change', function () {
        var selectedSemesterId = semesterSelect.val();
        var url = '@Url.Action("SemesterFilter", "AdminHome")' + '?selectedSemesterId=' + selectedSemesterId;
        businessSelect.empty();

        $.ajax({
            url: url,
            type: 'GET',
            dataType: 'json',
            success: function (res) {
                console.log(res);
                $('#cv_pending').text(res.cv_pending);
                $('#cv_accepted').text(res.cv_accepted);
                $('#cv_failed').text(res.cv_failed);
                $('#cv_canceled').text(res.cv_canceled);
                $('#sv_passed').text(res.sv_passed);
                $('#sv_failed').text(res.sv_failed);
                $('#sv_practicing').text(res.sv_practicing);
                $('#sv_pending').text(res.sv_pending);
                $('#sv_completed').text(res.sv_completed);
                $('#mentor').text(res.mentor);
                $('#business').text(res.business);
                $.each(res.businessList, function (index, semester) {
                    businessSelect.append('<option value="' + semester.ID + '" >' + semester.Name + '</option>');
                });
                businessSelect.trigger('change');
                if (res.cv_pending == 0 && res.cv_accepted == 0 && res.cv_failed == 0 && res.cv_canceled == 0) {
                    $('#cv_empty').text('Không có dữ liệu');
                } else {
                    $('#cv_empty').text('');
                }
                if (res.sv_failed == 0 && res.sv_completed == 0 && res.sv_passed == 0 && res.sv_pending == 0 && res.sv_praticing == 0) {
                    $('#sv_empty').text('Không có dữ liệu');
                } else {
                    $('#sv_empty').text('');
                }
                passedChart.data.labels = res.businessName
                passedChart.data.datasets[0].data = res.passStudent
                passedChart.update()
                chart2.data.datasets[0].data = [`${res.cv_pending}`, `${res.cv_accepted}`, `${res.cv_failed}`, `${res.cv_canceled}`];
                chart2.update();
                studentPie.data.datasets[0].data = [`${res.sv_passed}`, `${res.sv_failed}`, `${res.sv_practicing}`, `${res.sv_pending}`, `${res.sv_completed}`];
                studentPie.update();
            },
            error: function (xhr, status, error) {
            }
        });
    });
           businessSelect.on('change', function () {
               var selectedBusinessId = businessSelect.val();
               var url = '@Url.Action("BusinessFilter", "AdminHome")' + '?selectedBusinessId=' + selectedBusinessId;
               var arr = [];
               $.ajax({
                   url: url,
                   type: 'get',
                   dataType: 'json',
                   success: function (res) {
                       console.log(res)
                       if ((res.posProvider).length > 0) {
                           for (let i = 0; i < (res.posProvider).length; i++) {
                               arr.push(res.posProvider[i].position);
                           }
                           $('#bussiness_empty').text('')
                       } else {
                           $('#bussiness_empty').text('Không có dữ liệu')
                       }
                       myBusiness.data.datasets[0].data = res.posCount;
                       myBusiness.data.labels = arr;
                       myBusiness.update();

                   }
               })
           })
           yearSelect.trigger('change');
       });
    </script>
}